name: Lint & Test

on:
  workflow_call:
  push:
    branches:
      - '*'
    tags-ignore:
      - '**'

env: 
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:password@localhost:5432/test_db

jobs:
  test-and-lint:
    name: Test and lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Clone stefn repository
        run: git clone --depth 1 https://github.com/lucas-montes/stefn.git ../stefn
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      
      - uses: Swatinem/rust-cache@v2
         
      - name: Install SQLx CLI
        run: cargo install sqlx-cli

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!"
              exit 0
            fi
            echo "Waiting for PostgreSQL..."
            sleep 1
          done
          echo "PostgreSQL did not become ready in time"
          exit 1

      - name: Run migrations
        run: make create-db
      
      - name: Rust fmt
        run: cargo fmt -- --check

      - name: Rust clippy
        run: cargo clippy --locked -- -Dclippy::all -Dclippy::pedantic -D warnings

      - name: Rust test
        run: cargo test --all --locked
      